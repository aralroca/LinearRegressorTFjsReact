{"version":3,"sources":["classes/LinearModel.js","components/LinearModel.js","index.js"],"names":["LinearModel","xs","ys","layers","tf","dense","units","inputShape","lossAndOptimizer","loss","optimizer","this","linearModel","add","compile","fit","value","Array","from","predict","dataSync","isValid","num","Number","isNaN","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","dataset","training","completed","LinearModelClass","onAdd","bind","assertThisInitialized","onPredict","onTrainModel","comeBack","event","x","parseFloat","y","preventDefault","newValues","id","uuid","undefined","setState","concat","toConsumableArray","error","input","toPredict","prediction","_this2","map","data","trainModel","then","index","slice","splice","_this3","react_default","a","createElement","onSubmit","type","ref","el","className","item","key","onClick","onRemove","length","disabled","_this4","renderPrediction","renderTraining","Component","App","components_LinearModel_LinearModel","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.01d52062.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs';\n\nexport default class LinearModel {\n  async trainModel(xs, ys){\n    const layers = tf.layers.dense({\n      units: 1,\n      inputShape: [1],\n    });\n    const lossAndOptimizer = {\n      loss: 'meanSquaredError',\n      optimizer: 'sgd',\n    };\n\n    this.linearModel = tf.sequential();\n    this.linearModel.add(layers);\n    this.linearModel.compile(lossAndOptimizer);\n    \n    await this.linearModel.fit(\n      tf.tensor1d(xs),\n      tf.tensor1d(ys),\n    );\n  }\n\n  predict(value){\n    return Array.from(\n      this.linearModel\n      .predict(tf.tensor2d([value], [1, 1]))\n      .dataSync()\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport LinearModelClass from '../classes/LinearModel';\nimport uuid from 'uuid';\n\nconst isValid = num => typeof num === 'number' && !Number.isNaN(num);\n\nexport default class LinearModel extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dataset: [],\n      training: false,\n      completed: false,\n    }\n    this.linearModel = new LinearModelClass();\n    this.onAdd = this.onAdd.bind(this);\n    this.onPredict = this.onPredict.bind(this);\n    this.onTrainModel = this.onTrainModel.bind(this);\n    this.comeBack = this.comeBack.bind(this);\n  }\n\n  onAdd(event){\n    const x = parseFloat(this.x.value);\n    const y = parseFloat(this.y.value);\n\n    event.preventDefault();\n\n    if(!isValid(x)){\n      this.setState({ error: 'X is not a valid number'});\n      return;\n    }\n\n    if(!isValid(y)){\n      this.setState({ error: 'Y is not a valid number'});\n      return;\n    }\n    const newValues = { id: uuid(), x, y };\n    this.x.value = undefined;\n    this.y.value = undefined;\n\n    this.setState({\n      dataset: [...this.state.dataset, newValues],\n      error: '',\n    })\n  }\n\n  onPredict(){\n    const input = parseFloat(this.toPredict.value);\n\n    if(!isValid(input)){\n       this.setState({ error: 'Input from prediction is not a valid number'});\n       return;\n    }\n\n    this.setState({\n      prediction: this.linearModel.predict(input),\n      error: '',\n    });\n  }\n\n  onTrainModel(){\n    const xs = this.state.dataset.map(data => data.x);\n    const ys = this.state.dataset.map(data => data.y);\n\n    this.setState({ training: true, prediction: undefined }, () => {\n      this.linearModel.trainModel(xs, ys).then(() => {\n         this.setState({ completed: true, training: false, error: '' })\n      })\n    });\n  }\n\n  onRemove(index){\n    const dataset = this.state.dataset.slice();\n\n    dataset.splice(index, 1);\n\n    this.setState({ dataset });\n  }\n\n  comeBack(){\n    this.setState({ completed: false });\n  }\n\n  renderTraining(){\n    return (\n      <div>\n        <h2>Train a linear model</h2>\n        <form onSubmit={this.onAdd}>\n          <label>X:</label>\n          <input\n            type=\"number\" \n            ref={el => { this.x = el; }} \n          />\n          <label>Y:</label>\n          <input \n            type=\"number\" \n            ref={el => { this.y = el; }} \n          />\n          <button type=\"submit\">Add</button>\n         <p className=\"error\">{this.state.error}</p>\n        </form>\n        {this.state.dataset.map((item, index) => (\n          <div className=\"dataset\" key={`dataset-${item.id}`}>\n            <span><b>X:</b> {item.x}, <b>Y:</b> {item.y}</span>\n            <button className=\"remove\" onClick={() => this.onRemove(index)}>Remove</button>\n          </div>\n        ))}\n        {this.state.dataset.length > 2 \n        ? (\n           <button \n            className=\"train\"\n            onClick={this.onTrainModel} \n            disabled={this.state.training}\n          >\n            {this.state.training ? 'Training' : 'Do Training!'}\n          </button>\n        )\n        : (\n          <span className=\"info\">\n            Please, add at least 3 elements into the dataset\n          </span>\n        )}\n      </div>\n    )\n  }\n\n  renderPrediction(){\n    return (\n      <div>\n        <h2>Trained! Now fill the X to predict the Y</h2>\n        <input type=\"number\" ref={el => { this.toPredict = el}} />\n        <button onClick={this.onPredict}>Predict</button>\n        <button onClick={this.comeBack}>Come back to train page</button>\n\n        {this.state.prediction && (\n          <p>\n            <b>Prediction:</b> {this.state.prediction}\n          </p>\n        )}\n      </div>\n    )\n  }\n\n  render(){\n    return this.state.completed\n      ? this.renderPrediction()\n      : this.renderTraining();\n  }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport LinearModel from './components/LinearModel';\nimport './style.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <LinearModel />\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}